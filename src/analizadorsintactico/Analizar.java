/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analizadorsintactico;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Stack;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lobeznos
 */
public class Analizar extends javax.swing.JFrame {
    private Tabla2 tabla;
    private String cadena;
    private Stack<String> pila;
    private boolean bandera;
    private DefaultTableModel modelo;
    /**
     * Creates new form Analizar
     */
    public Analizar() {
        initComponents();
        //area.setEditable(false);
        this.setResizable(false);
        this.setLocationRelativeTo(this);
        tabla=new Tabla2();
        pila= new Stack<String>();
        modelo=(DefaultTableModel) table.getModel();
    }
    public void convierte()
    { 
        cadena="";
        String c=area.getText();
        StringTokenizer s=new StringTokenizer(c,"\n");
        while(s.hasMoreTokens())
        {
            String linea=s.nextToken();
            StringTokenizer s2=new StringTokenizer(linea," ");
            while(s2.hasMoreTokens())
            {
                String a=s2.nextToken();
                switch(a)
                {
                    case "while": cadena+="a";
                    break;
                    case "(": cadena+="b";
                    break;
                    case ")": cadena+="c";
                    break;
                    case "{": cadena+="d";
                    break;
                    case "}": cadena+="e";
                    break;
                    case ";": cadena+="f";
                    break;
                    case "<": cadena+="g";
                    break;
                    case ">": cadena+="h";
                    break;
                    case "!": cadena+="i";
                    break;
                    case "=": cadena+="j";
                    break;
                    case "&": cadena+="k";
                    break;
                    case "|": cadena+="l";
                    break;
                    case "+": cadena+="m";
                    break;
                    case "-": cadena+="n";
                    break;
                    case "*": cadena+="o";
                    break;
                    case "/": cadena+="p";
                    break;
                    default: cadena+=a;
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        combo1 = new javax.swing.JComboBox<>();
        combo2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        analizar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Analizador Sint치ctico");

        combo1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C칩digos correctos...", "archivo1", "archivo2", "archivo3" }));
        combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1ActionPerformed(evt);
            }
        });

        combo2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "C칩digos incorrectos...", "archivo4", "archivo5", "archivo6" }));
        combo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo2ActionPerformed(evt);
            }
        });

        area.setColumns(20);
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pila", "Cadena", "Simbolo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMinWidth(120);
            table.getColumnModel().getColumn(0).setPreferredWidth(120);
            table.getColumnModel().getColumn(0).setMaxWidth(520);
            table.getColumnModel().getColumn(1).setMinWidth(50);
            table.getColumnModel().getColumn(1).setPreferredWidth(150);
            table.getColumnModel().getColumn(1).setMaxWidth(250);
            table.getColumnModel().getColumn(2).setMinWidth(50);
            table.getColumnModel().getColumn(2).setPreferredWidth(60);
            table.getColumnModel().getColumn(2).setMaxWidth(70);
        }

        analizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        analizar.setText("Analizar");
        analizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(102, 0, 0));
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Evaluaci칩n while");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(376, 376, 376)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(28, 28, 28)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(analizar))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(analizar)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AnalizadorSintactico.main(null);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void analizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarActionPerformed
        bandera=true;
        if(!area.getText().equalsIgnoreCase(""))
        {
            limpiarTabla();
            pila.clear();
            String valortabla;
            String simbolo;
            int i=0;
            convierte();
            int especial=0;
            pila.push(especial+"");
            simbolo=cadena.charAt(i)+"";
            valortabla=tabla.getValor(especial, simbolo);
            while(bandera && !valortabla.equalsIgnoreCase("acc"))
            {
                String vec[]={pila.toString(),cadena.substring(i, cadena.length()),simbolo};
                if(valortabla.charAt(0)=='s')
                {
                    pila.push(simbolo);
                    if(valortabla.length()==2)
                    {
                        especial=Integer.parseInt(valortabla.charAt(1)+"");
                    }
                    else
                    {
                        especial=Integer.parseInt(valortabla.substring(1, 3));
                    }
                    pila.push(especial+"");
                    i++;
                    if(i!=cadena.length())
                        simbolo=cadena.charAt(i)+"";
                    else
                       simbolo="$";
                }
                else
                {
                    if(valortabla.equals(""))
                    {
                        error();
                    }
                    else
                    {
                        if(valortabla.equalsIgnoreCase("E"))
                        {
                            error();
                        }
                        else
                        {
                            StringTokenizer t=new StringTokenizer(valortabla,"-");
                            String izquierdo=t.nextToken();
                            String derecho=t.nextToken();
                            int i3=derecho.length()-1;
                            while(i3!=-1)
                            {
                                if(pila.lastElement().equalsIgnoreCase(derecho.charAt(i3)+""))
                                {
                                    i3--;
                                }
                                pila.pop();
                            }
                            especial=Integer.parseInt(pila.lastElement());
                            for(int 침=0;침<izquierdo.length();침++)
                            {
                                pila.push(izquierdo.charAt(침)+"");
                                especial=Integer.parseInt(tabla.getValor(especial, izquierdo));
                                pila.push(especial+"");
                            }
                        }
                    }
                }
                valortabla=tabla.getValor(especial, simbolo);
                modelo.addRow(vec);
            }
            String vec[]={pila.toString(),cadena.substring(i, cadena.length()),simbolo};
            if(simbolo.equalsIgnoreCase("$"))
                JOptionPane.showMessageDialog(null, "CADENA CORRECTA");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "El 치rea de texto esta vac칤o");
        }
    }//GEN-LAST:event_analizarActionPerformed

    public void limpiarTabla()
    {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }
    public void error()
    {
        bandera=false;
        JOptionPane.showMessageDialog(null, "CADENA INCORRECTA");
    }
    private void combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1ActionPerformed
        String nomArch=combo1.getSelectedItem().toString();
        if(!nomArch.equalsIgnoreCase("C칩digos correctos..."))
        {
            area.setText("");
            String texto="";
            try
            {
                String linea;
                FileReader fr=new FileReader (nomArch);
                BufferedReader archent= new BufferedReader (fr);
                linea=archent.readLine();
                while(linea!=null)
                {
                    texto+=linea+"\n";
                    linea=archent.readLine();

                }
                archent.close();
            }
            catch (Exception exc)
            {
                    JOptionPane.showMessageDialog(null, "NO HAY ARCHIVO");
            }
            area.setText(texto);
        }
        else
        {
            
        }
    }//GEN-LAST:event_combo1ActionPerformed

    private void combo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo2ActionPerformed
        String nomArch=combo2.getSelectedItem().toString();
        if(!nomArch.equalsIgnoreCase("C칩digos incorrectos..."))
        {
            area.setText("");
            String texto="";
            try
            {
                String linea;
                FileReader fr=new FileReader (nomArch);
                BufferedReader archent= new BufferedReader (fr);
                linea=archent.readLine();
                while(linea!=null)
                {
                    texto+=linea+"\n";
                    linea=archent.readLine();

                }
                archent.close();
            }
            catch (Exception exc)
            {
                    JOptionPane.showMessageDialog(null, "NO HAY ARCHIVO");
            }
            area.setText(texto);
        }
        else
        {
            
        }
    }//GEN-LAST:event_combo2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void principal() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Analizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Analizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Analizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Analizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Analizar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analizar;
    private javax.swing.JTextArea area;
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JComboBox<String> combo2;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
